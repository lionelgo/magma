// Code generated by protoc-gen-go. DO NOT EDIT.
// source: lte/protos/s1ap_service.proto

package protos

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protos "magma/orc8r/lib/go/protos"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EnbConnectedResult struct {
	EnbIds               []uint32 `protobuf:"varint,1,rep,packed,name=enb_ids,json=enbIds,proto3" json:"enb_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnbConnectedResult) Reset()         { *m = EnbConnectedResult{} }
func (m *EnbConnectedResult) String() string { return proto.CompactTextString(m) }
func (*EnbConnectedResult) ProtoMessage()    {}
func (*EnbConnectedResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_b760ca1045684df1, []int{0}
}

func (m *EnbConnectedResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnbConnectedResult.Unmarshal(m, b)
}
func (m *EnbConnectedResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnbConnectedResult.Marshal(b, m, deterministic)
}
func (m *EnbConnectedResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnbConnectedResult.Merge(m, src)
}
func (m *EnbConnectedResult) XXX_Size() int {
	return xxx_messageInfo_EnbConnectedResult.Size(m)
}
func (m *EnbConnectedResult) XXX_DiscardUnknown() {
	xxx_messageInfo_EnbConnectedResult.DiscardUnknown(m)
}

var xxx_messageInfo_EnbConnectedResult proto.InternalMessageInfo

func (m *EnbConnectedResult) GetEnbIds() []uint32 {
	if m != nil {
		return m.EnbIds
	}
	return nil
}

func init() {
	proto.RegisterType((*EnbConnectedResult)(nil), "magma.lte.EnbConnectedResult")
}

func init() { proto.RegisterFile("lte/protos/s1ap_service.proto", fileDescriptor_b760ca1045684df1) }

var fileDescriptor_b760ca1045684df1 = []byte{
	// 194 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0xcd, 0x29, 0x49, 0xd5,
	0x2f, 0x28, 0xca, 0x2f, 0xc9, 0x2f, 0xd6, 0x2f, 0x36, 0x4c, 0x2c, 0x88, 0x2f, 0x4e, 0x2d, 0x2a,
	0xcb, 0x4c, 0x4e, 0xd5, 0x03, 0x8b, 0x09, 0x71, 0xe6, 0x26, 0xa6, 0xe7, 0x26, 0xea, 0xe5, 0x94,
	0xa4, 0x4a, 0x49, 0xe6, 0x17, 0x25, 0x5b, 0x14, 0xc1, 0xd4, 0x26, 0xe7, 0xe7, 0xe6, 0xe6, 0xe7,
	0x41, 0x54, 0x29, 0xe9, 0x72, 0x09, 0xb9, 0xe6, 0x25, 0x39, 0xe7, 0xe7, 0xe5, 0xa5, 0x26, 0x97,
	0xa4, 0xa6, 0x04, 0xa5, 0x16, 0x97, 0xe6, 0x94, 0x08, 0x89, 0x73, 0xb1, 0xa7, 0xe6, 0x25, 0xc5,
	0x67, 0xa6, 0x14, 0x4b, 0x30, 0x2a, 0x30, 0x6b, 0xf0, 0x06, 0xb1, 0xa5, 0xe6, 0x25, 0x79, 0xa6,
	0x14, 0x1b, 0x85, 0x70, 0x71, 0x07, 0x1b, 0x26, 0x16, 0x04, 0x43, 0x6c, 0x12, 0x72, 0xe5, 0xe2,
	0x77, 0x4f, 0x2d, 0x41, 0x36, 0x40, 0x48, 0x50, 0x0f, 0x62, 0x2f, 0xd8, 0x4a, 0xbd, 0xb0, 0xfc,
	0xcc, 0x14, 0x29, 0x59, 0x3d, 0xb8, 0x53, 0xf4, 0x30, 0x2d, 0x53, 0x62, 0x70, 0x92, 0x8e, 0x92,
	0x04, 0xab, 0xd0, 0x07, 0xf9, 0x28, 0x39, 0x27, 0xbf, 0x34, 0x45, 0x3f, 0x3d, 0x1f, 0xea, 0xdc,
	0x24, 0x36, 0x30, 0x6d, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0xa0, 0x07, 0x2f, 0x5d, 0xef, 0x00,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// S1ApServiceClient is the client API for S1ApService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type S1ApServiceClient interface {
	GetEnbConnected(ctx context.Context, in *protos.Void, opts ...grpc.CallOption) (*EnbConnectedResult, error)
}

type s1ApServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewS1ApServiceClient(cc grpc.ClientConnInterface) S1ApServiceClient {
	return &s1ApServiceClient{cc}
}

func (c *s1ApServiceClient) GetEnbConnected(ctx context.Context, in *protos.Void, opts ...grpc.CallOption) (*EnbConnectedResult, error) {
	out := new(EnbConnectedResult)
	err := c.cc.Invoke(ctx, "/magma.lte.S1apService/GetEnbConnected", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// S1ApServiceServer is the server API for S1ApService service.
type S1ApServiceServer interface {
	GetEnbConnected(context.Context, *protos.Void) (*EnbConnectedResult, error)
}

// UnimplementedS1ApServiceServer can be embedded to have forward compatible implementations.
type UnimplementedS1ApServiceServer struct {
}

func (*UnimplementedS1ApServiceServer) GetEnbConnected(ctx context.Context, req *protos.Void) (*EnbConnectedResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEnbConnected not implemented")
}

func RegisterS1ApServiceServer(s *grpc.Server, srv S1ApServiceServer) {
	s.RegisterService(&_S1ApService_serviceDesc, srv)
}

func _S1ApService_GetEnbConnected_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(protos.Void)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(S1ApServiceServer).GetEnbConnected(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.S1apService/GetEnbConnected",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(S1ApServiceServer).GetEnbConnected(ctx, req.(*protos.Void))
	}
	return interceptor(ctx, in, info, handler)
}

var _S1ApService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "magma.lte.S1apService",
	HandlerType: (*S1ApServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetEnbConnected",
			Handler:    _S1ApService_GetEnbConnected_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lte/protos/s1ap_service.proto",
}
