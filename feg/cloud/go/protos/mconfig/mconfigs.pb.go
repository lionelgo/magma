// Code generated by protoc-gen-go. DO NOT EDIT.
// source: feg/protos/mconfig/mconfigs.proto

package mconfig

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	protos "magma/orc8r/lib/go/protos"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GyInitMethod int32

const (
	GyInitMethod_RESERVED    GyInitMethod = 0
	GyInitMethod_PER_SESSION GyInitMethod = 1
	GyInitMethod_PER_KEY     GyInitMethod = 2
)

var GyInitMethod_name = map[int32]string{
	0: "RESERVED",
	1: "PER_SESSION",
	2: "PER_KEY",
}

var GyInitMethod_value = map[string]int32{
	"RESERVED":    0,
	"PER_SESSION": 1,
	"PER_KEY":     2,
}

func (x GyInitMethod) String() string {
	return proto.EnumName(GyInitMethod_name, int32(x))
}

func (GyInitMethod) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ac1e34e12c6f455d, []int{0}
}

//------------------------------------------------------------------------------
// FeG configs
//------------------------------------------------------------------------------
type DiamClientConfig struct {
	Protocol             string   `protobuf:"bytes,1,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Retransmits          uint32   `protobuf:"varint,3,opt,name=retransmits,proto3" json:"retransmits,omitempty"`
	WatchdogInterval     uint32   `protobuf:"varint,4,opt,name=watchdog_interval,json=watchdogInterval,proto3" json:"watchdog_interval,omitempty"`
	RetryCount           uint32   `protobuf:"varint,5,opt,name=retry_count,json=retryCount,proto3" json:"retry_count,omitempty"`
	LocalAddress         string   `protobuf:"bytes,6,opt,name=local_address,json=localAddress,proto3" json:"local_address,omitempty"`
	ProductName          string   `protobuf:"bytes,7,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`
	Realm                string   `protobuf:"bytes,8,opt,name=realm,proto3" json:"realm,omitempty"`
	Host                 string   `protobuf:"bytes,9,opt,name=host,proto3" json:"host,omitempty"`
	DestRealm            string   `protobuf:"bytes,10,opt,name=dest_realm,json=destRealm,proto3" json:"dest_realm,omitempty"`
	DestHost             string   `protobuf:"bytes,11,opt,name=dest_host,json=destHost,proto3" json:"dest_host,omitempty"`
	DisableDestHost      bool     `protobuf:"varint,12,opt,name=disable_dest_host,json=disableDestHost,proto3" json:"disable_dest_host,omitempty"`
	OverwriteDestHost    bool     `protobuf:"varint,13,opt,name=overwrite_dest_host,json=overwriteDestHost,proto3" json:"overwrite_dest_host,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiamClientConfig) Reset()         { *m = DiamClientConfig{} }
func (m *DiamClientConfig) String() string { return proto.CompactTextString(m) }
func (*DiamClientConfig) ProtoMessage()    {}
func (*DiamClientConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac1e34e12c6f455d, []int{0}
}

func (m *DiamClientConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiamClientConfig.Unmarshal(m, b)
}
func (m *DiamClientConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiamClientConfig.Marshal(b, m, deterministic)
}
func (m *DiamClientConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiamClientConfig.Merge(m, src)
}
func (m *DiamClientConfig) XXX_Size() int {
	return xxx_messageInfo_DiamClientConfig.Size(m)
}
func (m *DiamClientConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_DiamClientConfig.DiscardUnknown(m)
}

var xxx_messageInfo_DiamClientConfig proto.InternalMessageInfo

func (m *DiamClientConfig) GetProtocol() string {
	if m != nil {
		return m.Protocol
	}
	return ""
}

func (m *DiamClientConfig) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *DiamClientConfig) GetRetransmits() uint32 {
	if m != nil {
		return m.Retransmits
	}
	return 0
}

func (m *DiamClientConfig) GetWatchdogInterval() uint32 {
	if m != nil {
		return m.WatchdogInterval
	}
	return 0
}

func (m *DiamClientConfig) GetRetryCount() uint32 {
	if m != nil {
		return m.RetryCount
	}
	return 0
}

func (m *DiamClientConfig) GetLocalAddress() string {
	if m != nil {
		return m.LocalAddress
	}
	return ""
}

func (m *DiamClientConfig) GetProductName() string {
	if m != nil {
		return m.ProductName
	}
	return ""
}

func (m *DiamClientConfig) GetRealm() string {
	if m != nil {
		return m.Realm
	}
	return ""
}

func (m *DiamClientConfig) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *DiamClientConfig) GetDestRealm() string {
	if m != nil {
		return m.DestRealm
	}
	return ""
}

func (m *DiamClientConfig) GetDestHost() string {
	if m != nil {
		return m.DestHost
	}
	return ""
}

func (m *DiamClientConfig) GetDisableDestHost() bool {
	if m != nil {
		return m.DisableDestHost
	}
	return false
}

func (m *DiamClientConfig) GetOverwriteDestHost() bool {
	if m != nil {
		return m.OverwriteDestHost
	}
	return false
}

type DiamServerConfig struct {
	Protocol             string   `protobuf:"bytes,1,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	LocalAddress         string   `protobuf:"bytes,3,opt,name=local_address,json=localAddress,proto3" json:"local_address,omitempty"`
	DestHost             string   `protobuf:"bytes,4,opt,name=dest_host,json=destHost,proto3" json:"dest_host,omitempty"`
	DestRealm            string   `protobuf:"bytes,5,opt,name=dest_realm,json=destRealm,proto3" json:"dest_realm,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiamServerConfig) Reset()         { *m = DiamServerConfig{} }
func (m *DiamServerConfig) String() string { return proto.CompactTextString(m) }
func (*DiamServerConfig) ProtoMessage()    {}
func (*DiamServerConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac1e34e12c6f455d, []int{1}
}

func (m *DiamServerConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiamServerConfig.Unmarshal(m, b)
}
func (m *DiamServerConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiamServerConfig.Marshal(b, m, deterministic)
}
func (m *DiamServerConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiamServerConfig.Merge(m, src)
}
func (m *DiamServerConfig) XXX_Size() int {
	return xxx_messageInfo_DiamServerConfig.Size(m)
}
func (m *DiamServerConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_DiamServerConfig.DiscardUnknown(m)
}

var xxx_messageInfo_DiamServerConfig proto.InternalMessageInfo

func (m *DiamServerConfig) GetProtocol() string {
	if m != nil {
		return m.Protocol
	}
	return ""
}

func (m *DiamServerConfig) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *DiamServerConfig) GetLocalAddress() string {
	if m != nil {
		return m.LocalAddress
	}
	return ""
}

func (m *DiamServerConfig) GetDestHost() string {
	if m != nil {
		return m.DestHost
	}
	return ""
}

func (m *DiamServerConfig) GetDestRealm() string {
	if m != nil {
		return m.DestRealm
	}
	return ""
}

type S6AConfig struct {
	LogLevel protos.LogLevel   `protobuf:"varint,1,opt,name=log_level,json=logLevel,proto3,enum=magma.orc8r.LogLevel" json:"log_level,omitempty"`
	Server   *DiamClientConfig `protobuf:"bytes,5,opt,name=server,proto3" json:"server,omitempty"`
	// Percentage of request failures considered to be unhealthy
	RequestFailureThreshold float32 `protobuf:"fixed32,6,opt,name=request_failure_threshold,json=requestFailureThreshold,proto3" json:"request_failure_threshold,omitempty"`
	// Minimum number of requests necessary to consider a metrics snapshot valid
	MinimumRequestThreshold uint32   `protobuf:"varint,7,opt,name=minimum_request_threshold,json=minimumRequestThreshold,proto3" json:"minimum_request_threshold,omitempty"`
	PlmnIds                 []string `protobuf:"bytes,8,rep,name=PlmnIds,proto3" json:"PlmnIds,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *S6AConfig) Reset()         { *m = S6AConfig{} }
func (m *S6AConfig) String() string { return proto.CompactTextString(m) }
func (*S6AConfig) ProtoMessage()    {}
func (*S6AConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac1e34e12c6f455d, []int{2}
}

func (m *S6AConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S6AConfig.Unmarshal(m, b)
}
func (m *S6AConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S6AConfig.Marshal(b, m, deterministic)
}
func (m *S6AConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S6AConfig.Merge(m, src)
}
func (m *S6AConfig) XXX_Size() int {
	return xxx_messageInfo_S6AConfig.Size(m)
}
func (m *S6AConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_S6AConfig.DiscardUnknown(m)
}

var xxx_messageInfo_S6AConfig proto.InternalMessageInfo

func (m *S6AConfig) GetLogLevel() protos.LogLevel {
	if m != nil {
		return m.LogLevel
	}
	return protos.LogLevel_DEBUG
}

func (m *S6AConfig) GetServer() *DiamClientConfig {
	if m != nil {
		return m.Server
	}
	return nil
}

func (m *S6AConfig) GetRequestFailureThreshold() float32 {
	if m != nil {
		return m.RequestFailureThreshold
	}
	return 0
}

func (m *S6AConfig) GetMinimumRequestThreshold() uint32 {
	if m != nil {
		return m.MinimumRequestThreshold
	}
	return 0
}

func (m *S6AConfig) GetPlmnIds() []string {
	if m != nil {
		return m.PlmnIds
	}
	return nil
}

type VirtualApnRule struct {
	ApnFilter            string   `protobuf:"bytes,1,opt,name=apn_filter,json=apnFilter,proto3" json:"apn_filter,omitempty"`
	ApnOverwrite         string   `protobuf:"bytes,2,opt,name=apn_overwrite,json=apnOverwrite,proto3" json:"apn_overwrite,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VirtualApnRule) Reset()         { *m = VirtualApnRule{} }
func (m *VirtualApnRule) String() string { return proto.CompactTextString(m) }
func (*VirtualApnRule) ProtoMessage()    {}
func (*VirtualApnRule) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac1e34e12c6f455d, []int{3}
}

func (m *VirtualApnRule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VirtualApnRule.Unmarshal(m, b)
}
func (m *VirtualApnRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VirtualApnRule.Marshal(b, m, deterministic)
}
func (m *VirtualApnRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VirtualApnRule.Merge(m, src)
}
func (m *VirtualApnRule) XXX_Size() int {
	return xxx_messageInfo_VirtualApnRule.Size(m)
}
func (m *VirtualApnRule) XXX_DiscardUnknown() {
	xxx_messageInfo_VirtualApnRule.DiscardUnknown(m)
}

var xxx_messageInfo_VirtualApnRule proto.InternalMessageInfo

func (m *VirtualApnRule) GetApnFilter() string {
	if m != nil {
		return m.ApnFilter
	}
	return ""
}

func (m *VirtualApnRule) GetApnOverwrite() string {
	if m != nil {
		return m.ApnOverwrite
	}
	return ""
}

type GxConfig struct {
	Server               *DiamClientConfig   `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
	OverwriteApn         string              `protobuf:"bytes,2,opt,name=OverwriteApn,proto3" json:"OverwriteApn,omitempty"`
	Servers              []*DiamClientConfig `protobuf:"bytes,3,rep,name=servers,proto3" json:"servers,omitempty"`
	DisableGx            bool                `protobuf:"varint,4,opt,name=DisableGx,proto3" json:"DisableGx,omitempty"`
	VirtualApnRules      []*VirtualApnRule   `protobuf:"bytes,5,rep,name=virtual_apn_rules,json=virtualApnRules,proto3" json:"virtual_apn_rules,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *GxConfig) Reset()         { *m = GxConfig{} }
func (m *GxConfig) String() string { return proto.CompactTextString(m) }
func (*GxConfig) ProtoMessage()    {}
func (*GxConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac1e34e12c6f455d, []int{4}
}

func (m *GxConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GxConfig.Unmarshal(m, b)
}
func (m *GxConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GxConfig.Marshal(b, m, deterministic)
}
func (m *GxConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GxConfig.Merge(m, src)
}
func (m *GxConfig) XXX_Size() int {
	return xxx_messageInfo_GxConfig.Size(m)
}
func (m *GxConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_GxConfig.DiscardUnknown(m)
}

var xxx_messageInfo_GxConfig proto.InternalMessageInfo

func (m *GxConfig) GetServer() *DiamClientConfig {
	if m != nil {
		return m.Server
	}
	return nil
}

func (m *GxConfig) GetOverwriteApn() string {
	if m != nil {
		return m.OverwriteApn
	}
	return ""
}

func (m *GxConfig) GetServers() []*DiamClientConfig {
	if m != nil {
		return m.Servers
	}
	return nil
}

func (m *GxConfig) GetDisableGx() bool {
	if m != nil {
		return m.DisableGx
	}
	return false
}

func (m *GxConfig) GetVirtualApnRules() []*VirtualApnRule {
	if m != nil {
		return m.VirtualApnRules
	}
	return nil
}

type GyConfig struct {
	Server               *DiamClientConfig   `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
	InitMethod           GyInitMethod        `protobuf:"varint,2,opt,name=init_method,json=initMethod,proto3,enum=magma.mconfig.GyInitMethod" json:"init_method,omitempty"`
	OverwriteApn         string              `protobuf:"bytes,3,opt,name=OverwriteApn,proto3" json:"OverwriteApn,omitempty"`
	Servers              []*DiamClientConfig `protobuf:"bytes,4,rep,name=servers,proto3" json:"servers,omitempty"`
	DisableGy            bool                `protobuf:"varint,5,opt,name=DisableGy,proto3" json:"DisableGy,omitempty"`
	VirtualApnRules      []*VirtualApnRule   `protobuf:"bytes,6,rep,name=virtual_apn_rules,json=virtualApnRules,proto3" json:"virtual_apn_rules,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *GyConfig) Reset()         { *m = GyConfig{} }
func (m *GyConfig) String() string { return proto.CompactTextString(m) }
func (*GyConfig) ProtoMessage()    {}
func (*GyConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac1e34e12c6f455d, []int{5}
}

func (m *GyConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GyConfig.Unmarshal(m, b)
}
func (m *GyConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GyConfig.Marshal(b, m, deterministic)
}
func (m *GyConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GyConfig.Merge(m, src)
}
func (m *GyConfig) XXX_Size() int {
	return xxx_messageInfo_GyConfig.Size(m)
}
func (m *GyConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_GyConfig.DiscardUnknown(m)
}

var xxx_messageInfo_GyConfig proto.InternalMessageInfo

func (m *GyConfig) GetServer() *DiamClientConfig {
	if m != nil {
		return m.Server
	}
	return nil
}

func (m *GyConfig) GetInitMethod() GyInitMethod {
	if m != nil {
		return m.InitMethod
	}
	return GyInitMethod_RESERVED
}

func (m *GyConfig) GetOverwriteApn() string {
	if m != nil {
		return m.OverwriteApn
	}
	return ""
}

func (m *GyConfig) GetServers() []*DiamClientConfig {
	if m != nil {
		return m.Servers
	}
	return nil
}

func (m *GyConfig) GetDisableGy() bool {
	if m != nil {
		return m.DisableGy
	}
	return false
}

func (m *GyConfig) GetVirtualApnRules() []*VirtualApnRule {
	if m != nil {
		return m.VirtualApnRules
	}
	return nil
}

type SessionProxyConfig struct {
	LogLevel protos.LogLevel `protobuf:"varint,1,opt,name=log_level,json=logLevel,proto3,enum=magma.orc8r.LogLevel" json:"log_level,omitempty"`
	Gx       *GxConfig       `protobuf:"bytes,5,opt,name=gx,proto3" json:"gx,omitempty"`
	Gy       *GyConfig       `protobuf:"bytes,6,opt,name=gy,proto3" json:"gy,omitempty"`
	// Percentage of request failures considered to be unhealthy
	RequestFailureThreshold float32 `protobuf:"fixed32,7,opt,name=request_failure_threshold,json=requestFailureThreshold,proto3" json:"request_failure_threshold,omitempty"`
	// Minimum number of requests necessary to consider a metrics snapshot valid
	MinimumRequestThreshold uint32   `protobuf:"varint,8,opt,name=minimum_request_threshold,json=minimumRequestThreshold,proto3" json:"minimum_request_threshold,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *SessionProxyConfig) Reset()         { *m = SessionProxyConfig{} }
func (m *SessionProxyConfig) String() string { return proto.CompactTextString(m) }
func (*SessionProxyConfig) ProtoMessage()    {}
func (*SessionProxyConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac1e34e12c6f455d, []int{6}
}

func (m *SessionProxyConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionProxyConfig.Unmarshal(m, b)
}
func (m *SessionProxyConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionProxyConfig.Marshal(b, m, deterministic)
}
func (m *SessionProxyConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionProxyConfig.Merge(m, src)
}
func (m *SessionProxyConfig) XXX_Size() int {
	return xxx_messageInfo_SessionProxyConfig.Size(m)
}
func (m *SessionProxyConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionProxyConfig.DiscardUnknown(m)
}

var xxx_messageInfo_SessionProxyConfig proto.InternalMessageInfo

func (m *SessionProxyConfig) GetLogLevel() protos.LogLevel {
	if m != nil {
		return m.LogLevel
	}
	return protos.LogLevel_DEBUG
}

func (m *SessionProxyConfig) GetGx() *GxConfig {
	if m != nil {
		return m.Gx
	}
	return nil
}

func (m *SessionProxyConfig) GetGy() *GyConfig {
	if m != nil {
		return m.Gy
	}
	return nil
}

func (m *SessionProxyConfig) GetRequestFailureThreshold() float32 {
	if m != nil {
		return m.RequestFailureThreshold
	}
	return 0
}

func (m *SessionProxyConfig) GetMinimumRequestThreshold() uint32 {
	if m != nil {
		return m.MinimumRequestThreshold
	}
	return 0
}

type SwxConfig struct {
	LogLevel protos.LogLevel   `protobuf:"varint,1,opt,name=log_level,json=logLevel,proto3,enum=magma.orc8r.LogLevel" json:"log_level,omitempty"`
	Server   *DiamClientConfig `protobuf:"bytes,2,opt,name=server,proto3" json:"server,omitempty"`
	// Flag to ensure that a user is authorized for Non-3GPP IP Access
	VerifyAuthorization bool   `protobuf:"varint,3,opt,name=verify_authorization,json=verifyAuthorization,proto3" json:"verify_authorization,omitempty"`
	CacheTTLSeconds     uint32 `protobuf:"varint,4,opt,name=CacheTTLSeconds,proto3" json:"CacheTTLSeconds,omitempty"`
	// Percentage of request failures considered to be unhealthy
	RequestFailureThreshold float32 `protobuf:"fixed32,5,opt,name=request_failure_threshold,json=requestFailureThreshold,proto3" json:"request_failure_threshold,omitempty"`
	// Minimum number of requests necessary to consider a metrics snapshot valid
	MinimumRequestThreshold uint32 `protobuf:"varint,6,opt,name=minimum_request_threshold,json=minimumRequestThreshold,proto3" json:"minimum_request_threshold,omitempty"`
	// Flag to ensure that we send SAR with REGISTER following successful MAA
	RegisterOnAuth bool `protobuf:"varint,7,opt,name=register_on_auth,json=registerOnAuth,proto3" json:"register_on_auth,omitempty"`
	// use returned maa.AAAServerName to derive Origin Realm from
	DeriveUnregisterRealm bool `protobuf:"varint,8,opt,name=derive_unregister_realm,json=deriveUnregisterRealm,proto3" json:"derive_unregister_realm,omitempty"`
	// PLMN IDs served by HLR
	HlrPlmnIds []string `protobuf:"bytes,9,rep,name=hlr_plmn_ids,json=hlrPlmnIds,proto3" json:"hlr_plmn_ids,omitempty"`
	// Server where SWx points to (can be one or more than one)
	Servers              []*DiamClientConfig `protobuf:"bytes,10,rep,name=servers,proto3" json:"servers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SwxConfig) Reset()         { *m = SwxConfig{} }
func (m *SwxConfig) String() string { return proto.CompactTextString(m) }
func (*SwxConfig) ProtoMessage()    {}
func (*SwxConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac1e34e12c6f455d, []int{7}
}

func (m *SwxConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SwxConfig.Unmarshal(m, b)
}
func (m *SwxConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SwxConfig.Marshal(b, m, deterministic)
}
func (m *SwxConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SwxConfig.Merge(m, src)
}
func (m *SwxConfig) XXX_Size() int {
	return xxx_messageInfo_SwxConfig.Size(m)
}
func (m *SwxConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_SwxConfig.DiscardUnknown(m)
}

var xxx_messageInfo_SwxConfig proto.InternalMessageInfo

func (m *SwxConfig) GetLogLevel() protos.LogLevel {
	if m != nil {
		return m.LogLevel
	}
	return protos.LogLevel_DEBUG
}

func (m *SwxConfig) GetServer() *DiamClientConfig {
	if m != nil {
		return m.Server
	}
	return nil
}

func (m *SwxConfig) GetVerifyAuthorization() bool {
	if m != nil {
		return m.VerifyAuthorization
	}
	return false
}

func (m *SwxConfig) GetCacheTTLSeconds() uint32 {
	if m != nil {
		return m.CacheTTLSeconds
	}
	return 0
}

func (m *SwxConfig) GetRequestFailureThreshold() float32 {
	if m != nil {
		return m.RequestFailureThreshold
	}
	return 0
}

func (m *SwxConfig) GetMinimumRequestThreshold() uint32 {
	if m != nil {
		return m.MinimumRequestThreshold
	}
	return 0
}

func (m *SwxConfig) GetRegisterOnAuth() bool {
	if m != nil {
		return m.RegisterOnAuth
	}
	return false
}

func (m *SwxConfig) GetDeriveUnregisterRealm() bool {
	if m != nil {
		return m.DeriveUnregisterRealm
	}
	return false
}

func (m *SwxConfig) GetHlrPlmnIds() []string {
	if m != nil {
		return m.HlrPlmnIds
	}
	return nil
}

func (m *SwxConfig) GetServers() []*DiamClientConfig {
	if m != nil {
		return m.Servers
	}
	return nil
}

type EapAkaConfig struct {
	LogLevel             protos.LogLevel        `protobuf:"varint,1,opt,name=log_level,json=logLevel,proto3,enum=magma.orc8r.LogLevel" json:"log_level,omitempty"`
	Timeout              *EapAkaConfig_Timeouts `protobuf:"bytes,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
	PlmnIds              []string               `protobuf:"bytes,3,rep,name=PlmnIds,proto3" json:"PlmnIds,omitempty"`
	UseS6A               bool                   `protobuf:"varint,4,opt,name=UseS6a,proto3" json:"UseS6a,omitempty"`
	MncLen               int32                  `protobuf:"varint,5,opt,name=MncLen,proto3" json:"MncLen,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *EapAkaConfig) Reset()         { *m = EapAkaConfig{} }
func (m *EapAkaConfig) String() string { return proto.CompactTextString(m) }
func (*EapAkaConfig) ProtoMessage()    {}
func (*EapAkaConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac1e34e12c6f455d, []int{8}
}

func (m *EapAkaConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EapAkaConfig.Unmarshal(m, b)
}
func (m *EapAkaConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EapAkaConfig.Marshal(b, m, deterministic)
}
func (m *EapAkaConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EapAkaConfig.Merge(m, src)
}
func (m *EapAkaConfig) XXX_Size() int {
	return xxx_messageInfo_EapAkaConfig.Size(m)
}
func (m *EapAkaConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_EapAkaConfig.DiscardUnknown(m)
}

var xxx_messageInfo_EapAkaConfig proto.InternalMessageInfo

func (m *EapAkaConfig) GetLogLevel() protos.LogLevel {
	if m != nil {
		return m.LogLevel
	}
	return protos.LogLevel_DEBUG
}

func (m *EapAkaConfig) GetTimeout() *EapAkaConfig_Timeouts {
	if m != nil {
		return m.Timeout
	}
	return nil
}

func (m *EapAkaConfig) GetPlmnIds() []string {
	if m != nil {
		return m.PlmnIds
	}
	return nil
}

func (m *EapAkaConfig) GetUseS6A() bool {
	if m != nil {
		return m.UseS6A
	}
	return false
}

func (m *EapAkaConfig) GetMncLen() int32 {
	if m != nil {
		return m.MncLen
	}
	return 0
}

type EapAkaConfig_Timeouts struct {
	ChallengeMs            uint32   `protobuf:"varint,1,opt,name=ChallengeMs,proto3" json:"ChallengeMs,omitempty"`
	ErrorNotificationMs    uint32   `protobuf:"varint,2,opt,name=ErrorNotificationMs,proto3" json:"ErrorNotificationMs,omitempty"`
	SessionMs              uint32   `protobuf:"varint,3,opt,name=SessionMs,proto3" json:"SessionMs,omitempty"`
	SessionAuthenticatedMs uint32   `protobuf:"varint,4,opt,name=SessionAuthenticatedMs,proto3" json:"SessionAuthenticatedMs,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *EapAkaConfig_Timeouts) Reset()         { *m = EapAkaConfig_Timeouts{} }
func (m *EapAkaConfig_Timeouts) String() string { return proto.CompactTextString(m) }
func (*EapAkaConfig_Timeouts) ProtoMessage()    {}
func (*EapAkaConfig_Timeouts) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac1e34e12c6f455d, []int{8, 0}
}

func (m *EapAkaConfig_Timeouts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EapAkaConfig_Timeouts.Unmarshal(m, b)
}
func (m *EapAkaConfig_Timeouts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EapAkaConfig_Timeouts.Marshal(b, m, deterministic)
}
func (m *EapAkaConfig_Timeouts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EapAkaConfig_Timeouts.Merge(m, src)
}
func (m *EapAkaConfig_Timeouts) XXX_Size() int {
	return xxx_messageInfo_EapAkaConfig_Timeouts.Size(m)
}
func (m *EapAkaConfig_Timeouts) XXX_DiscardUnknown() {
	xxx_messageInfo_EapAkaConfig_Timeouts.DiscardUnknown(m)
}

var xxx_messageInfo_EapAkaConfig_Timeouts proto.InternalMessageInfo

func (m *EapAkaConfig_Timeouts) GetChallengeMs() uint32 {
	if m != nil {
		return m.ChallengeMs
	}
	return 0
}

func (m *EapAkaConfig_Timeouts) GetErrorNotificationMs() uint32 {
	if m != nil {
		return m.ErrorNotificationMs
	}
	return 0
}

func (m *EapAkaConfig_Timeouts) GetSessionMs() uint32 {
	if m != nil {
		return m.SessionMs
	}
	return 0
}

func (m *EapAkaConfig_Timeouts) GetSessionAuthenticatedMs() uint32 {
	if m != nil {
		return m.SessionAuthenticatedMs
	}
	return 0
}

// EapProviderTimeouts is a generic EAP provider timeout config for all new providers
// TODO: It should eventually replace EapAkaConfig as well, but due to the braking nature
//       of the switch farther planning is required
type EapProviderTimeouts struct {
	ChallengeMs            uint32   `protobuf:"varint,1,opt,name=ChallengeMs,proto3" json:"ChallengeMs,omitempty"`
	ErrorNotificationMs    uint32   `protobuf:"varint,2,opt,name=ErrorNotificationMs,proto3" json:"ErrorNotificationMs,omitempty"`
	SessionMs              uint32   `protobuf:"varint,3,opt,name=SessionMs,proto3" json:"SessionMs,omitempty"`
	SessionAuthenticatedMs uint32   `protobuf:"varint,4,opt,name=SessionAuthenticatedMs,proto3" json:"SessionAuthenticatedMs,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *EapProviderTimeouts) Reset()         { *m = EapProviderTimeouts{} }
func (m *EapProviderTimeouts) String() string { return proto.CompactTextString(m) }
func (*EapProviderTimeouts) ProtoMessage()    {}
func (*EapProviderTimeouts) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac1e34e12c6f455d, []int{9}
}

func (m *EapProviderTimeouts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EapProviderTimeouts.Unmarshal(m, b)
}
func (m *EapProviderTimeouts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EapProviderTimeouts.Marshal(b, m, deterministic)
}
func (m *EapProviderTimeouts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EapProviderTimeouts.Merge(m, src)
}
func (m *EapProviderTimeouts) XXX_Size() int {
	return xxx_messageInfo_EapProviderTimeouts.Size(m)
}
func (m *EapProviderTimeouts) XXX_DiscardUnknown() {
	xxx_messageInfo_EapProviderTimeouts.DiscardUnknown(m)
}

var xxx_messageInfo_EapProviderTimeouts proto.InternalMessageInfo

func (m *EapProviderTimeouts) GetChallengeMs() uint32 {
	if m != nil {
		return m.ChallengeMs
	}
	return 0
}

func (m *EapProviderTimeouts) GetErrorNotificationMs() uint32 {
	if m != nil {
		return m.ErrorNotificationMs
	}
	return 0
}

func (m *EapProviderTimeouts) GetSessionMs() uint32 {
	if m != nil {
		return m.SessionMs
	}
	return 0
}

func (m *EapProviderTimeouts) GetSessionAuthenticatedMs() uint32 {
	if m != nil {
		return m.SessionAuthenticatedMs
	}
	return 0
}

type EapSimConfig struct {
	LogLevel             protos.LogLevel      `protobuf:"varint,1,opt,name=log_level,json=logLevel,proto3,enum=magma.orc8r.LogLevel" json:"log_level,omitempty"`
	Timeout              *EapProviderTimeouts `protobuf:"bytes,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
	PlmnIds              []string             `protobuf:"bytes,3,rep,name=PlmnIds,proto3" json:"PlmnIds,omitempty"`
	UseS6A               bool                 `protobuf:"varint,4,opt,name=UseS6a,proto3" json:"UseS6a,omitempty"`
	MncLen               int32                `protobuf:"varint,5,opt,name=MncLen,proto3" json:"MncLen,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *EapSimConfig) Reset()         { *m = EapSimConfig{} }
func (m *EapSimConfig) String() string { return proto.CompactTextString(m) }
func (*EapSimConfig) ProtoMessage()    {}
func (*EapSimConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac1e34e12c6f455d, []int{10}
}

func (m *EapSimConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EapSimConfig.Unmarshal(m, b)
}
func (m *EapSimConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EapSimConfig.Marshal(b, m, deterministic)
}
func (m *EapSimConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EapSimConfig.Merge(m, src)
}
func (m *EapSimConfig) XXX_Size() int {
	return xxx_messageInfo_EapSimConfig.Size(m)
}
func (m *EapSimConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_EapSimConfig.DiscardUnknown(m)
}

var xxx_messageInfo_EapSimConfig proto.InternalMessageInfo

func (m *EapSimConfig) GetLogLevel() protos.LogLevel {
	if m != nil {
		return m.LogLevel
	}
	return protos.LogLevel_DEBUG
}

func (m *EapSimConfig) GetTimeout() *EapProviderTimeouts {
	if m != nil {
		return m.Timeout
	}
	return nil
}

func (m *EapSimConfig) GetPlmnIds() []string {
	if m != nil {
		return m.PlmnIds
	}
	return nil
}

func (m *EapSimConfig) GetUseS6A() bool {
	if m != nil {
		return m.UseS6A
	}
	return false
}

func (m *EapSimConfig) GetMncLen() int32 {
	if m != nil {
		return m.MncLen
	}
	return 0
}

type AAAConfig struct {
	LogLevel protos.LogLevel `protobuf:"varint,1,opt,name=log_level,json=logLevel,proto3,enum=magma.orc8r.LogLevel" json:"log_level,omitempty"`
	// Idle session TTL
	IdleSessionTimeoutMs uint32 `protobuf:"varint,2,opt,name=IdleSessionTimeoutMs,proto3" json:"IdleSessionTimeoutMs,omitempty"`
	// enable accounting & maintain long term user sessions
	AccountingEnabled bool `protobuf:"varint,3,opt,name=AccountingEnabled,proto3" json:"AccountingEnabled,omitempty"`
	// Postpone Auth success until successful accounting CreateSession completion
	CreateSessionOnAuth bool `protobuf:"varint,4,opt,name=CreateSessionOnAuth,proto3" json:"CreateSessionOnAuth,omitempty"`
	// enable event logging for aaa events
	EventLoggingEnabled  bool          `protobuf:"varint,5,opt,name=EventLoggingEnabled,proto3" json:"EventLoggingEnabled,omitempty"`
	RadiusConfig         *RadiusConfig `protobuf:"bytes,6,opt,name=RadiusConfig,proto3" json:"RadiusConfig,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *AAAConfig) Reset()         { *m = AAAConfig{} }
func (m *AAAConfig) String() string { return proto.CompactTextString(m) }
func (*AAAConfig) ProtoMessage()    {}
func (*AAAConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac1e34e12c6f455d, []int{11}
}

func (m *AAAConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AAAConfig.Unmarshal(m, b)
}
func (m *AAAConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AAAConfig.Marshal(b, m, deterministic)
}
func (m *AAAConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AAAConfig.Merge(m, src)
}
func (m *AAAConfig) XXX_Size() int {
	return xxx_messageInfo_AAAConfig.Size(m)
}
func (m *AAAConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_AAAConfig.DiscardUnknown(m)
}

var xxx_messageInfo_AAAConfig proto.InternalMessageInfo

func (m *AAAConfig) GetLogLevel() protos.LogLevel {
	if m != nil {
		return m.LogLevel
	}
	return protos.LogLevel_DEBUG
}

func (m *AAAConfig) GetIdleSessionTimeoutMs() uint32 {
	if m != nil {
		return m.IdleSessionTimeoutMs
	}
	return 0
}

func (m *AAAConfig) GetAccountingEnabled() bool {
	if m != nil {
		return m.AccountingEnabled
	}
	return false
}

func (m *AAAConfig) GetCreateSessionOnAuth() bool {
	if m != nil {
		return m.CreateSessionOnAuth
	}
	return false
}

func (m *AAAConfig) GetEventLoggingEnabled() bool {
	if m != nil {
		return m.EventLoggingEnabled
	}
	return false
}

func (m *AAAConfig) GetRadiusConfig() *RadiusConfig {
	if m != nil {
		return m.RadiusConfig
	}
	return nil
}

type RadiusConfig struct {
	// Radius server secret
	Secret []byte `protobuf:"bytes,1,opt,name=Secret,proto3" json:"Secret,omitempty"`
	// Radius server network (udp/tcp/etc.
	Network string `protobuf:"bytes,2,opt,name=Network,proto3" json:"Network,omitempty"`
	// Authentication Radius server address
	AuthAddr string `protobuf:"bytes,3,opt,name=AuthAddr,proto3" json:"AuthAddr,omitempty"`
	// Accounting Radius server address
	AcctAddr string `protobuf:"bytes,4,opt,name=AcctAddr,proto3" json:"AcctAddr,omitempty"`
	// DAE server Address
	DAEAddr              string   `protobuf:"bytes,5,opt,name=DAEAddr,proto3" json:"DAEAddr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RadiusConfig) Reset()         { *m = RadiusConfig{} }
func (m *RadiusConfig) String() string { return proto.CompactTextString(m) }
func (*RadiusConfig) ProtoMessage()    {}
func (*RadiusConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac1e34e12c6f455d, []int{12}
}

func (m *RadiusConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RadiusConfig.Unmarshal(m, b)
}
func (m *RadiusConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RadiusConfig.Marshal(b, m, deterministic)
}
func (m *RadiusConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RadiusConfig.Merge(m, src)
}
func (m *RadiusConfig) XXX_Size() int {
	return xxx_messageInfo_RadiusConfig.Size(m)
}
func (m *RadiusConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_RadiusConfig.DiscardUnknown(m)
}

var xxx_messageInfo_RadiusConfig proto.InternalMessageInfo

func (m *RadiusConfig) GetSecret() []byte {
	if m != nil {
		return m.Secret
	}
	return nil
}

func (m *RadiusConfig) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

func (m *RadiusConfig) GetAuthAddr() string {
	if m != nil {
		return m.AuthAddr
	}
	return ""
}

func (m *RadiusConfig) GetAcctAddr() string {
	if m != nil {
		return m.AcctAddr
	}
	return ""
}

func (m *RadiusConfig) GetDAEAddr() string {
	if m != nil {
		return m.DAEAddr
	}
	return ""
}

type GatewayHealthConfig struct {
	RequiredServices          []string `protobuf:"bytes,1,rep,name=required_services,json=requiredServices,proto3" json:"required_services,omitempty"`
	UpdateIntervalSecs        uint32   `protobuf:"varint,2,opt,name=update_interval_secs,json=updateIntervalSecs,proto3" json:"update_interval_secs,omitempty"`
	UpdateFailureThreshold    uint32   `protobuf:"varint,3,opt,name=update_failure_threshold,json=updateFailureThreshold,proto3" json:"update_failure_threshold,omitempty"`
	CloudDisconnectPeriodSecs uint32   `protobuf:"varint,4,opt,name=cloud_disconnect_period_secs,json=cloudDisconnectPeriodSecs,proto3" json:"cloud_disconnect_period_secs,omitempty"`
	LocalDisconnectPeriodSecs uint32   `protobuf:"varint,5,opt,name=local_disconnect_period_secs,json=localDisconnectPeriodSecs,proto3" json:"local_disconnect_period_secs,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *GatewayHealthConfig) Reset()         { *m = GatewayHealthConfig{} }
func (m *GatewayHealthConfig) String() string { return proto.CompactTextString(m) }
func (*GatewayHealthConfig) ProtoMessage()    {}
func (*GatewayHealthConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac1e34e12c6f455d, []int{13}
}

func (m *GatewayHealthConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GatewayHealthConfig.Unmarshal(m, b)
}
func (m *GatewayHealthConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GatewayHealthConfig.Marshal(b, m, deterministic)
}
func (m *GatewayHealthConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GatewayHealthConfig.Merge(m, src)
}
func (m *GatewayHealthConfig) XXX_Size() int {
	return xxx_messageInfo_GatewayHealthConfig.Size(m)
}
func (m *GatewayHealthConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_GatewayHealthConfig.DiscardUnknown(m)
}

var xxx_messageInfo_GatewayHealthConfig proto.InternalMessageInfo

func (m *GatewayHealthConfig) GetRequiredServices() []string {
	if m != nil {
		return m.RequiredServices
	}
	return nil
}

func (m *GatewayHealthConfig) GetUpdateIntervalSecs() uint32 {
	if m != nil {
		return m.UpdateIntervalSecs
	}
	return 0
}

func (m *GatewayHealthConfig) GetUpdateFailureThreshold() uint32 {
	if m != nil {
		return m.UpdateFailureThreshold
	}
	return 0
}

func (m *GatewayHealthConfig) GetCloudDisconnectPeriodSecs() uint32 {
	if m != nil {
		return m.CloudDisconnectPeriodSecs
	}
	return 0
}

func (m *GatewayHealthConfig) GetLocalDisconnectPeriodSecs() uint32 {
	if m != nil {
		return m.LocalDisconnectPeriodSecs
	}
	return 0
}

type HSSConfig struct {
	Server *DiamServerConfig `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
	// Operator configuration field for LTE.
	LteAuthOp []byte `protobuf:"bytes,2,opt,name=lte_auth_op,json=lteAuthOp,proto3" json:"lte_auth_op,omitempty"`
	// Authentication management field for LTE.
	LteAuthAmf []byte `protobuf:"bytes,3,opt,name=lte_auth_amf,json=lteAuthAmf,proto3" json:"lte_auth_amf,omitempty"`
	// Maps from IMSI to SubscriptionProfile.
	SubProfiles map[string]*HSSConfig_SubscriptionProfile `protobuf:"bytes,4,rep,name=sub_profiles,json=subProfiles,proto3" json:"sub_profiles,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// If an IMSI if not found in sub_profiles, the default profile is used instead.
	DefaultSubProfile *HSSConfig_SubscriptionProfile `protobuf:"bytes,5,opt,name=default_sub_profile,json=defaultSubProfile,proto3" json:"default_sub_profile,omitempty"`
	// Whether to stream subscribers from the cloud subscriberdb service.
	StreamSubscribers    bool     `protobuf:"varint,6,opt,name=stream_subscribers,json=streamSubscribers,proto3" json:"stream_subscribers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HSSConfig) Reset()         { *m = HSSConfig{} }
func (m *HSSConfig) String() string { return proto.CompactTextString(m) }
func (*HSSConfig) ProtoMessage()    {}
func (*HSSConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac1e34e12c6f455d, []int{14}
}

func (m *HSSConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HSSConfig.Unmarshal(m, b)
}
func (m *HSSConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HSSConfig.Marshal(b, m, deterministic)
}
func (m *HSSConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HSSConfig.Merge(m, src)
}
func (m *HSSConfig) XXX_Size() int {
	return xxx_messageInfo_HSSConfig.Size(m)
}
func (m *HSSConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_HSSConfig.DiscardUnknown(m)
}

var xxx_messageInfo_HSSConfig proto.InternalMessageInfo

func (m *HSSConfig) GetServer() *DiamServerConfig {
	if m != nil {
		return m.Server
	}
	return nil
}

func (m *HSSConfig) GetLteAuthOp() []byte {
	if m != nil {
		return m.LteAuthOp
	}
	return nil
}

func (m *HSSConfig) GetLteAuthAmf() []byte {
	if m != nil {
		return m.LteAuthAmf
	}
	return nil
}

func (m *HSSConfig) GetSubProfiles() map[string]*HSSConfig_SubscriptionProfile {
	if m != nil {
		return m.SubProfiles
	}
	return nil
}

func (m *HSSConfig) GetDefaultSubProfile() *HSSConfig_SubscriptionProfile {
	if m != nil {
		return m.DefaultSubProfile
	}
	return nil
}

func (m *HSSConfig) GetStreamSubscribers() bool {
	if m != nil {
		return m.StreamSubscribers
	}
	return false
}

type HSSConfig_SubscriptionProfile struct {
	// Maximum uplink bit rate (AMBR-UL)
	MaxUlBitRate uint64 `protobuf:"varint,1,opt,name=max_ul_bit_rate,json=maxUlBitRate,proto3" json:"max_ul_bit_rate,omitempty"`
	// Maximum downlink bit rate (AMBR-DL)
	MaxDlBitRate         uint64   `protobuf:"varint,2,opt,name=max_dl_bit_rate,json=maxDlBitRate,proto3" json:"max_dl_bit_rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HSSConfig_SubscriptionProfile) Reset()         { *m = HSSConfig_SubscriptionProfile{} }
func (m *HSSConfig_SubscriptionProfile) String() string { return proto.CompactTextString(m) }
func (*HSSConfig_SubscriptionProfile) ProtoMessage()    {}
func (*HSSConfig_SubscriptionProfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac1e34e12c6f455d, []int{14, 0}
}

func (m *HSSConfig_SubscriptionProfile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HSSConfig_SubscriptionProfile.Unmarshal(m, b)
}
func (m *HSSConfig_SubscriptionProfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HSSConfig_SubscriptionProfile.Marshal(b, m, deterministic)
}
func (m *HSSConfig_SubscriptionProfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HSSConfig_SubscriptionProfile.Merge(m, src)
}
func (m *HSSConfig_SubscriptionProfile) XXX_Size() int {
	return xxx_messageInfo_HSSConfig_SubscriptionProfile.Size(m)
}
func (m *HSSConfig_SubscriptionProfile) XXX_DiscardUnknown() {
	xxx_messageInfo_HSSConfig_SubscriptionProfile.DiscardUnknown(m)
}

var xxx_messageInfo_HSSConfig_SubscriptionProfile proto.InternalMessageInfo

func (m *HSSConfig_SubscriptionProfile) GetMaxUlBitRate() uint64 {
	if m != nil {
		return m.MaxUlBitRate
	}
	return 0
}

func (m *HSSConfig_SubscriptionProfile) GetMaxDlBitRate() uint64 {
	if m != nil {
		return m.MaxDlBitRate
	}
	return 0
}

type RadiusdConfig struct {
	// Port the metrics server is running on
	RadiusMetricsPort uint32 `protobuf:"varint,1,opt,name=radius_metrics_port,json=radiusMetricsPort,proto3" json:"radius_metrics_port,omitempty"`
	// The path to access the prometheus metrics on the server
	RadiusMetricsPath string `protobuf:"bytes,2,opt,name=radius_metrics_path,json=radiusMetricsPath,proto3" json:"radius_metrics_path,omitempty"`
	// Interval in seconds between fetching and updating metrics
	UpdateIntervalSecs uint32 `protobuf:"varint,3,opt,name=update_interval_secs,json=updateIntervalSecs,proto3" json:"update_interval_secs,omitempty"`
	// Hostname for prometheus metrics
	RadiusMetricsHost    string   `protobuf:"bytes,4,opt,name=radius_metrics_host,json=radiusMetricsHost,proto3" json:"radius_metrics_host,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RadiusdConfig) Reset()         { *m = RadiusdConfig{} }
func (m *RadiusdConfig) String() string { return proto.CompactTextString(m) }
func (*RadiusdConfig) ProtoMessage()    {}
func (*RadiusdConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac1e34e12c6f455d, []int{15}
}

func (m *RadiusdConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RadiusdConfig.Unmarshal(m, b)
}
func (m *RadiusdConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RadiusdConfig.Marshal(b, m, deterministic)
}
func (m *RadiusdConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RadiusdConfig.Merge(m, src)
}
func (m *RadiusdConfig) XXX_Size() int {
	return xxx_messageInfo_RadiusdConfig.Size(m)
}
func (m *RadiusdConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_RadiusdConfig.DiscardUnknown(m)
}

var xxx_messageInfo_RadiusdConfig proto.InternalMessageInfo

func (m *RadiusdConfig) GetRadiusMetricsPort() uint32 {
	if m != nil {
		return m.RadiusMetricsPort
	}
	return 0
}

func (m *RadiusdConfig) GetRadiusMetricsPath() string {
	if m != nil {
		return m.RadiusMetricsPath
	}
	return ""
}

func (m *RadiusdConfig) GetUpdateIntervalSecs() uint32 {
	if m != nil {
		return m.UpdateIntervalSecs
	}
	return 0
}

func (m *RadiusdConfig) GetRadiusMetricsHost() string {
	if m != nil {
		return m.RadiusMetricsHost
	}
	return ""
}

type SCTPClientConfig struct {
	ServerAddress        string   `protobuf:"bytes,1,opt,name=server_address,json=serverAddress,proto3" json:"server_address,omitempty"`
	LocalAddress         string   `protobuf:"bytes,2,opt,name=local_address,json=localAddress,proto3" json:"local_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SCTPClientConfig) Reset()         { *m = SCTPClientConfig{} }
func (m *SCTPClientConfig) String() string { return proto.CompactTextString(m) }
func (*SCTPClientConfig) ProtoMessage()    {}
func (*SCTPClientConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac1e34e12c6f455d, []int{16}
}

func (m *SCTPClientConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SCTPClientConfig.Unmarshal(m, b)
}
func (m *SCTPClientConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SCTPClientConfig.Marshal(b, m, deterministic)
}
func (m *SCTPClientConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SCTPClientConfig.Merge(m, src)
}
func (m *SCTPClientConfig) XXX_Size() int {
	return xxx_messageInfo_SCTPClientConfig.Size(m)
}
func (m *SCTPClientConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_SCTPClientConfig.DiscardUnknown(m)
}

var xxx_messageInfo_SCTPClientConfig proto.InternalMessageInfo

func (m *SCTPClientConfig) GetServerAddress() string {
	if m != nil {
		return m.ServerAddress
	}
	return ""
}

func (m *SCTPClientConfig) GetLocalAddress() string {
	if m != nil {
		return m.LocalAddress
	}
	return ""
}

type CsfbConfig struct {
	LogLevel             protos.LogLevel   `protobuf:"varint,1,opt,name=log_level,json=logLevel,proto3,enum=magma.orc8r.LogLevel" json:"log_level,omitempty"`
	Client               *SCTPClientConfig `protobuf:"bytes,2,opt,name=client,proto3" json:"client,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CsfbConfig) Reset()         { *m = CsfbConfig{} }
func (m *CsfbConfig) String() string { return proto.CompactTextString(m) }
func (*CsfbConfig) ProtoMessage()    {}
func (*CsfbConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac1e34e12c6f455d, []int{17}
}

func (m *CsfbConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CsfbConfig.Unmarshal(m, b)
}
func (m *CsfbConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CsfbConfig.Marshal(b, m, deterministic)
}
func (m *CsfbConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CsfbConfig.Merge(m, src)
}
func (m *CsfbConfig) XXX_Size() int {
	return xxx_messageInfo_CsfbConfig.Size(m)
}
func (m *CsfbConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_CsfbConfig.DiscardUnknown(m)
}

var xxx_messageInfo_CsfbConfig proto.InternalMessageInfo

func (m *CsfbConfig) GetLogLevel() protos.LogLevel {
	if m != nil {
		return m.LogLevel
	}
	return protos.LogLevel_DEBUG
}

func (m *CsfbConfig) GetClient() *SCTPClientConfig {
	if m != nil {
		return m.Client
	}
	return nil
}

type EnvoyControllerConfig struct {
	LogLevel             protos.LogLevel `protobuf:"varint,1,opt,name=log_level,json=logLevel,proto3,enum=magma.orc8r.LogLevel" json:"log_level,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *EnvoyControllerConfig) Reset()         { *m = EnvoyControllerConfig{} }
func (m *EnvoyControllerConfig) String() string { return proto.CompactTextString(m) }
func (*EnvoyControllerConfig) ProtoMessage()    {}
func (*EnvoyControllerConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac1e34e12c6f455d, []int{18}
}

func (m *EnvoyControllerConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnvoyControllerConfig.Unmarshal(m, b)
}
func (m *EnvoyControllerConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnvoyControllerConfig.Marshal(b, m, deterministic)
}
func (m *EnvoyControllerConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnvoyControllerConfig.Merge(m, src)
}
func (m *EnvoyControllerConfig) XXX_Size() int {
	return xxx_messageInfo_EnvoyControllerConfig.Size(m)
}
func (m *EnvoyControllerConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_EnvoyControllerConfig.DiscardUnknown(m)
}

var xxx_messageInfo_EnvoyControllerConfig proto.InternalMessageInfo

func (m *EnvoyControllerConfig) GetLogLevel() protos.LogLevel {
	if m != nil {
		return m.LogLevel
	}
	return protos.LogLevel_DEBUG
}

func init() {
	proto.RegisterEnum("magma.mconfig.GyInitMethod", GyInitMethod_name, GyInitMethod_value)
	proto.RegisterType((*DiamClientConfig)(nil), "magma.mconfig.DiamClientConfig")
	proto.RegisterType((*DiamServerConfig)(nil), "magma.mconfig.DiamServerConfig")
	proto.RegisterType((*S6AConfig)(nil), "magma.mconfig.S6aConfig")
	proto.RegisterType((*VirtualApnRule)(nil), "magma.mconfig.VirtualApnRule")
	proto.RegisterType((*GxConfig)(nil), "magma.mconfig.GxConfig")
	proto.RegisterType((*GyConfig)(nil), "magma.mconfig.GyConfig")
	proto.RegisterType((*SessionProxyConfig)(nil), "magma.mconfig.SessionProxyConfig")
	proto.RegisterType((*SwxConfig)(nil), "magma.mconfig.SwxConfig")
	proto.RegisterType((*EapAkaConfig)(nil), "magma.mconfig.EapAkaConfig")
	proto.RegisterType((*EapAkaConfig_Timeouts)(nil), "magma.mconfig.EapAkaConfig.Timeouts")
	proto.RegisterType((*EapProviderTimeouts)(nil), "magma.mconfig.EapProviderTimeouts")
	proto.RegisterType((*EapSimConfig)(nil), "magma.mconfig.EapSimConfig")
	proto.RegisterType((*AAAConfig)(nil), "magma.mconfig.AAAConfig")
	proto.RegisterType((*RadiusConfig)(nil), "magma.mconfig.RadiusConfig")
	proto.RegisterType((*GatewayHealthConfig)(nil), "magma.mconfig.GatewayHealthConfig")
	proto.RegisterType((*HSSConfig)(nil), "magma.mconfig.HSSConfig")
	proto.RegisterMapType((map[string]*HSSConfig_SubscriptionProfile)(nil), "magma.mconfig.HSSConfig.SubProfilesEntry")
	proto.RegisterType((*HSSConfig_SubscriptionProfile)(nil), "magma.mconfig.HSSConfig.SubscriptionProfile")
	proto.RegisterType((*RadiusdConfig)(nil), "magma.mconfig.RadiusdConfig")
	proto.RegisterType((*SCTPClientConfig)(nil), "magma.mconfig.SCTPClientConfig")
	proto.RegisterType((*CsfbConfig)(nil), "magma.mconfig.CsfbConfig")
	proto.RegisterType((*EnvoyControllerConfig)(nil), "magma.mconfig.EnvoyControllerConfig")
}

func init() { proto.RegisterFile("feg/protos/mconfig/mconfigs.proto", fileDescriptor_ac1e34e12c6f455d) }

var fileDescriptor_ac1e34e12c6f455d = []byte{
	// 1758 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x58, 0xcd, 0x6f, 0x23, 0x49,
	0x15, 0xc7, 0x76, 0x3e, 0xec, 0x67, 0x27, 0x71, 0x2a, 0xf3, 0xe1, 0xc9, 0xce, 0xb2, 0x99, 0x5e,
	0x56, 0x84, 0xdd, 0xc5, 0x59, 0x82, 0x34, 0x0c, 0xa3, 0x15, 0x23, 0x4f, 0xe2, 0x9d, 0x89, 0x36,
	0x99, 0x44, 0xdd, 0x99, 0x95, 0x40, 0x88, 0x56, 0xa5, 0xbb, 0x6c, 0x97, 0xa6, 0xba, 0xab, 0xa9,
	0xae, 0x76, 0x62, 0xae, 0xdc, 0x80, 0xd3, 0xfe, 0x17, 0xdc, 0x38, 0xec, 0x1d, 0x89, 0x03, 0x12,
	0xdc, 0xf8, 0x8f, 0x50, 0x7d, 0x74, 0xfb, 0x23, 0x4e, 0x44, 0xc6, 0x70, 0xe0, 0x64, 0xd7, 0xfb,
	0xfd, 0xea, 0x55, 0xd5, 0xaf, 0xde, 0xab, 0x7a, 0xd5, 0xf0, 0xa4, 0x47, 0xfa, 0x7b, 0x89, 0xe0,
	0x92, 0xa7, 0x7b, 0x51, 0xc0, 0xe3, 0x1e, 0xed, 0xe7, 0xbf, 0x69, 0x5b, 0xdb, 0xd1, 0x5a, 0x84,
	0xfb, 0x11, 0x6e, 0x5b, 0xeb, 0xf6, 0x23, 0x2e, 0x82, 0x67, 0x22, 0xef, 0x13, 0xf0, 0x28, 0xe2,
	0xb1, 0x61, 0x3a, 0x7f, 0xab, 0x40, 0xf3, 0x90, 0xe2, 0xe8, 0x80, 0x51, 0x12, 0xcb, 0x03, 0xcd,
	0x47, 0xdb, 0x50, 0xd5, 0x68, 0xc0, 0x59, 0xab, 0xb4, 0x53, 0xda, 0xad, 0xb9, 0x45, 0x1b, 0xb5,
	0x60, 0x15, 0x87, 0xa1, 0x20, 0x69, 0xda, 0x2a, 0x6b, 0x28, 0x6f, 0xa2, 0x1d, 0xa8, 0x0b, 0x22,
	0x05, 0x8e, 0xd3, 0x88, 0xca, 0xb4, 0x55, 0xd9, 0x29, 0xed, 0xae, 0xb9, 0x93, 0x26, 0xf4, 0x19,
	0x6c, 0x5e, 0x62, 0x19, 0x0c, 0x42, 0xde, 0xf7, 0x69, 0x2c, 0x89, 0x18, 0x62, 0xd6, 0x5a, 0xd2,
	0xbc, 0x66, 0x0e, 0x1c, 0x59, 0x3b, 0xfa, 0xc8, 0xb8, 0x1b, 0xf9, 0x01, 0xcf, 0x62, 0xd9, 0x5a,
	0xd6, 0x34, 0xd0, 0xa6, 0x03, 0x65, 0x41, 0x1f, 0xc3, 0x1a, 0xe3, 0x01, 0x66, 0x7e, 0x3e, 0x9f,
	0x15, 0x3d, 0x9f, 0x86, 0x36, 0x76, 0xec, 0xa4, 0x9e, 0x40, 0x23, 0x11, 0x3c, 0xcc, 0x02, 0xe9,
	0xc7, 0x38, 0x22, 0xad, 0x55, 0xcd, 0xa9, 0x5b, 0xdb, 0x1b, 0x1c, 0x11, 0x74, 0x0f, 0x96, 0x05,
	0xc1, 0x2c, 0x6a, 0x55, 0x35, 0x66, 0x1a, 0x08, 0xc1, 0xd2, 0x80, 0xa7, 0xb2, 0x55, 0xd3, 0x46,
	0xfd, 0x1f, 0x7d, 0x08, 0x10, 0x92, 0x54, 0xfa, 0x86, 0x0e, 0x1a, 0xa9, 0x29, 0x8b, 0xab, 0xbb,
	0x7c, 0x00, 0xba, 0xe1, 0xeb, 0x7e, 0x75, 0xa3, 0x9b, 0x32, 0xbc, 0x56, 0x7d, 0x3f, 0x85, 0xcd,
	0x90, 0xa6, 0xf8, 0x82, 0x11, 0x7f, 0x4c, 0x6a, 0xec, 0x94, 0x76, 0xab, 0xee, 0x86, 0x05, 0x0e,
	0x73, 0x6e, 0x1b, 0xb6, 0xf8, 0x90, 0x88, 0x4b, 0x41, 0xe5, 0x24, 0x7b, 0x4d, 0xb3, 0x37, 0x0b,
	0x28, 0xe7, 0x3b, 0x7f, 0x2e, 0x99, 0x4d, 0xf4, 0x88, 0x18, 0x12, 0xb1, 0xd0, 0x26, 0x5e, 0x13,
	0xb5, 0x32, 0x47, 0xd4, 0xa9, 0x85, 0x2e, 0xcd, 0x2c, 0x74, 0x5a, 0xa4, 0xe5, 0x19, 0x91, 0x9c,
	0x3f, 0x94, 0xa1, 0xe6, 0x3d, 0xc5, 0x76, 0x92, 0xfb, 0x50, 0x63, 0xbc, 0xef, 0x33, 0x32, 0x24,
	0x66, 0x96, 0xeb, 0xfb, 0xf7, 0xdb, 0x26, 0x78, 0x75, 0xcc, 0xb6, 0x8f, 0x79, 0xff, 0x58, 0x81,
	0x6e, 0x95, 0xd9, 0x7f, 0xe8, 0x67, 0xb0, 0x92, 0xea, 0x85, 0x6a, 0xe7, 0xf5, 0xfd, 0x8f, 0xda,
	0x53, 0xd1, 0xde, 0x9e, 0x0d, 0x67, 0xd7, 0xd2, 0xd1, 0x73, 0x78, 0x24, 0xc8, 0x6f, 0x33, 0x35,
	0xb9, 0x1e, 0xa6, 0x2c, 0x13, 0xc4, 0x97, 0x03, 0x41, 0xd2, 0x01, 0x67, 0xa1, 0x0e, 0x9e, 0xb2,
	0xfb, 0xd0, 0x12, 0xbe, 0x32, 0xf8, 0x79, 0x0e, 0xab, 0xbe, 0x11, 0x8d, 0x69, 0x94, 0x45, 0x7e,
	0xee, 0x63, 0xdc, 0x77, 0x55, 0xc7, 0xe6, 0x43, 0x4b, 0x70, 0x0d, 0x3e, 0xee, 0xdb, 0x82, 0xd5,
	0x33, 0x16, 0xc5, 0x47, 0x61, 0xda, 0xaa, 0xee, 0x54, 0x94, 0xda, 0xb6, 0xe9, 0x9c, 0xc3, 0xfa,
	0x37, 0x54, 0xc8, 0x0c, 0xb3, 0x4e, 0x12, 0xbb, 0x19, 0x23, 0x4a, 0x3d, 0x9c, 0xc4, 0x7e, 0x8f,
	0x32, 0x49, 0x84, 0xdd, 0xb7, 0x1a, 0x4e, 0xe2, 0xaf, 0xb4, 0x41, 0x6d, 0x8f, 0x82, 0x8b, 0x10,
	0xb0, 0xdb, 0xd7, 0xc0, 0x49, 0x7c, 0x9a, 0xdb, 0x9c, 0x3f, 0x96, 0xa1, 0xfa, 0xea, 0xca, 0x2a,
	0x3c, 0x56, 0xab, 0x74, 0x37, 0xb5, 0x1c, 0x68, 0x14, 0x2e, 0x3b, 0x49, 0x9c, 0x8f, 0x34, 0x69,
	0x43, 0x3f, 0x87, 0x55, 0xc3, 0x56, 0x71, 0x52, 0xf9, 0x4f, 0xbc, 0xe7, 0x7c, 0xf4, 0x18, 0x6a,
	0x87, 0x26, 0xec, 0x5f, 0x5d, 0xe9, 0x18, 0xaa, 0xba, 0x63, 0x03, 0x3a, 0x82, 0xcd, 0xa1, 0x11,
	0xc6, 0x57, 0xeb, 0x15, 0x19, 0x23, 0x69, 0x6b, 0x59, 0x0f, 0xf1, 0xe1, 0xcc, 0x10, 0xd3, 0x02,
	0xba, 0x1b, 0xc3, 0xa9, 0x76, 0xea, 0xfc, 0x43, 0xa9, 0x31, 0x5a, 0x54, 0x8d, 0x2f, 0xa1, 0x4e,
	0x63, 0x2a, 0xfd, 0x88, 0xc8, 0x01, 0x0f, 0xb5, 0x18, 0xeb, 0xfb, 0x1f, 0xcc, 0xf4, 0x7e, 0x35,
	0x3a, 0x8a, 0xa9, 0x3c, 0xd1, 0x14, 0x17, 0x68, 0xf1, 0xff, 0x9a, 0x96, 0x95, 0xdb, 0xb5, 0x5c,
	0x7a, 0x7f, 0x2d, 0x47, 0x3a, 0x29, 0x26, 0xb4, 0x1c, 0xcd, 0xd7, 0x72, 0xe5, 0xbd, 0xb4, 0xfc,
	0xb6, 0x0c, 0xc8, 0x23, 0x69, 0x4a, 0x79, 0x7c, 0x26, 0xf8, 0xd5, 0x68, 0x81, 0x2c, 0xfe, 0x21,
	0x94, 0xfb, 0x57, 0x36, 0x83, 0x1f, 0xce, 0xea, 0x68, 0x83, 0xd7, 0x2d, 0xf7, 0xaf, 0x34, 0x71,
	0xa4, 0xd3, 0x73, 0x0e, 0x71, 0x54, 0x10, 0x47, 0xb7, 0xa7, 0xf7, 0xea, 0x02, 0xe9, 0x5d, 0xbd,
	0x35, 0xbd, 0x9d, 0x3f, 0x2d, 0x41, 0xcd, 0xbb, 0xbc, 0xfa, 0xaf, 0x9c, 0x68, 0xe5, 0xbb, 0x45,
	0xe5, 0x4f, 0xe0, 0xde, 0x90, 0x08, 0xda, 0x1b, 0xf9, 0x38, 0x93, 0x03, 0x2e, 0xe8, 0xef, 0xb0,
	0xa4, 0xdc, 0xc4, 0x57, 0xd5, 0xdd, 0x32, 0x58, 0x67, 0x12, 0x42, 0xbb, 0xb0, 0x71, 0x80, 0x83,
	0x01, 0x39, 0x3f, 0x3f, 0xf6, 0x48, 0xc0, 0xe3, 0x30, 0xb5, 0x37, 0xf0, 0xac, 0xf9, 0x76, 0x3d,
	0x97, 0x17, 0xd0, 0x73, 0xe5, 0xf6, 0xe3, 0x72, 0x17, 0x9a, 0x82, 0xf4, 0x69, 0x2a, 0x89, 0xf0,
	0x79, 0xac, 0x57, 0xa6, 0xb7, 0xaf, 0xea, 0xae, 0xe7, 0xf6, 0xd3, 0x58, 0x2d, 0x0a, 0x3d, 0x85,
	0x87, 0x21, 0x11, 0x74, 0x48, 0xfc, 0x2c, 0x2e, 0xba, 0x8c, 0xef, 0xf2, 0xaa, 0x7b, 0xdf, 0xc0,
	0x6f, 0x0b, 0xd4, 0x5c, 0xd4, 0x3b, 0xd0, 0x18, 0x30, 0xe1, 0x27, 0x2c, 0x8a, 0x7d, 0x1a, 0xa6,
	0xad, 0x9a, 0x3e, 0x95, 0x61, 0xc0, 0x84, 0x3d, 0x98, 0x27, 0x93, 0x11, 0xee, 0x96, 0x8c, 0xce,
	0xef, 0x2b, 0xd0, 0xe8, 0xe2, 0xa4, 0xf3, 0x6e, 0x91, 0x3b, 0xee, 0x17, 0xb0, 0x2a, 0x69, 0x44,
	0x78, 0x26, 0x6d, 0x48, 0xfc, 0x60, 0x66, 0xfc, 0xc9, 0x11, 0xda, 0xe7, 0x86, 0x9a, 0xba, 0x79,
	0xa7, 0xc9, 0x2b, 0xa7, 0x32, 0x75, 0xe5, 0xa0, 0x07, 0xb0, 0xf2, 0x36, 0x25, 0xde, 0x53, 0x6c,
	0x0f, 0x5d, 0xdb, 0x52, 0xf6, 0x93, 0x38, 0x38, 0x26, 0xb1, 0xde, 0xda, 0x65, 0xd7, 0xb6, 0xb6,
	0xbf, 0x2b, 0x41, 0x35, 0xf7, 0xaf, 0x4a, 0xbc, 0x83, 0x01, 0x66, 0x8c, 0xc4, 0x7d, 0x72, 0x92,
	0xea, 0xc5, 0xac, 0xb9, 0x93, 0x26, 0xf4, 0x05, 0x6c, 0x75, 0x85, 0xe0, 0xe2, 0x0d, 0x97, 0xb4,
	0x47, 0x03, 0x1d, 0x73, 0x27, 0xa6, 0xca, 0x58, 0x73, 0xe7, 0x41, 0xea, 0xf0, 0xb2, 0x47, 0xca,
	0x49, 0x5e, 0x34, 0x8e, 0x0d, 0xe8, 0x29, 0x3c, 0xb0, 0x0d, 0xb5, 0xe3, 0x24, 0x96, 0xaa, 0x23,
	0x09, 0x4f, 0xf2, 0xa8, 0xbd, 0x01, 0x75, 0xfe, 0x5a, 0x82, 0xad, 0x2e, 0x4e, 0xce, 0x04, 0x1f,
	0xd2, 0x90, 0x88, 0xff, 0xc3, 0x15, 0xfc, 0xb3, 0xa4, 0xe3, 0xc8, 0xa3, 0xd1, 0x02, 0x71, 0xf4,
	0xe5, 0x6c, 0x1c, 0x39, 0xd7, 0xe3, 0x68, 0x56, 0xa3, 0xff, 0x41, 0x14, 0x39, 0x7f, 0x2f, 0x43,
	0xad, 0xd3, 0xe9, 0x2c, 0xb0, 0x92, 0x7d, 0xb8, 0x77, 0x14, 0x32, 0x62, 0xc5, 0xb2, 0x73, 0x2d,
	0xf6, 0x65, 0x2e, 0x86, 0x3e, 0x87, 0xcd, 0x4e, 0xa0, 0x9f, 0x0f, 0x34, 0xee, 0x77, 0x63, 0x75,
	0x1f, 0x86, 0xf6, 0x6c, 0xbc, 0x0e, 0xa8, 0x8d, 0x3f, 0x10, 0x04, 0xcb, 0xdc, 0x8f, 0x39, 0x64,
	0xec, 0x02, 0xe7, 0x41, 0x3a, 0x54, 0x86, 0x24, 0x96, 0xc7, 0xbc, 0xdf, 0x9f, 0x18, 0xc1, 0xdc,
	0xc0, 0xf3, 0x20, 0xf4, 0x02, 0x1a, 0x2e, 0x0e, 0x69, 0x96, 0x1a, 0x25, 0xec, 0xb5, 0x36, 0x5b,
	0x47, 0x4c, 0x52, 0xdc, 0xa9, 0x0e, 0xce, 0xb7, 0xa5, 0x69, 0x0f, 0x4a, 0x71, 0x8f, 0x04, 0x82,
	0x48, 0x2d, 0x64, 0xc3, 0xb5, 0x2d, 0xb5, 0x77, 0x6f, 0x88, 0xbc, 0xe4, 0xe2, 0x5d, 0x5e, 0xe2,
	0xdb, 0xa6, 0x7a, 0x18, 0xa8, 0xd9, 0xab, 0x62, 0xde, 0x16, 0x22, 0x45, 0x5b, 0x63, 0x41, 0x20,
	0x35, 0x66, 0x0b, 0xfb, 0xbc, 0xad, 0x3c, 0x1e, 0x76, 0xba, 0x1a, 0x32, 0x55, 0x7d, 0xde, 0x74,
	0xfe, 0x52, 0x86, 0xad, 0x57, 0x58, 0x92, 0x4b, 0x3c, 0x7a, 0x4d, 0x30, 0x93, 0x03, 0x3b, 0xb7,
	0xcf, 0x60, 0x53, 0x9d, 0xfe, 0x54, 0x90, 0xd0, 0x57, 0xc7, 0x23, 0x0d, 0x88, 0x4a, 0x39, 0x15,
	0x49, 0xcd, 0x1c, 0xf0, 0xac, 0x1d, 0x7d, 0x01, 0xf7, 0xb2, 0x24, 0xc4, 0x92, 0x14, 0x4f, 0x43,
	0x3f, 0x25, 0x41, 0xbe, 0xc1, 0xc8, 0x60, 0xf9, 0xeb, 0xd0, 0x23, 0x41, 0x8a, 0x9e, 0x41, 0xcb,
	0xf6, 0xb8, 0x7e, 0x3f, 0x99, 0x34, 0x7c, 0x60, 0xf0, 0x6b, 0xd7, 0xd3, 0x0b, 0x78, 0x1c, 0x30,
	0x9e, 0x85, 0x7e, 0x48, 0xd3, 0x80, 0xc7, 0x31, 0x09, 0xa4, 0x9f, 0x10, 0x41, 0x79, 0x68, 0xc6,
	0x34, 0x99, 0xf9, 0x48, 0x73, 0x0e, 0x0b, 0xca, 0x99, 0x66, 0xe8, 0xa1, 0x5f, 0xc0, 0x63, 0xf3,
	0x4c, 0xba, 0xc1, 0x81, 0x79, 0xad, 0x3e, 0xd2, 0x9c, 0x79, 0x0e, 0x9c, 0xef, 0x96, 0xa0, 0xf6,
	0xda, 0xf3, 0xee, 0x50, 0x96, 0x4e, 0x3e, 0xee, 0x8a, 0x02, 0xe0, 0xfb, 0x50, 0x67, 0x92, 0xe8,
	0x3b, 0xd2, 0xe7, 0x89, 0xd6, 0xaa, 0xe1, 0xd6, 0x98, 0x24, 0x6a, 0x47, 0x4f, 0x13, 0x75, 0xd3,
	0x15, 0x38, 0x8e, 0x7a, 0x5a, 0x96, 0x86, 0x0b, 0x96, 0xd0, 0x89, 0x7a, 0xe8, 0x18, 0x1a, 0x69,
	0x76, 0xe1, 0x27, 0x82, 0xf7, 0xa8, 0x2a, 0x0c, 0x4d, 0xed, 0xf9, 0xa3, 0x99, 0x09, 0x14, 0x53,
	0x6d, 0x7b, 0xd9, 0xc5, 0x99, 0xe5, 0x76, 0x63, 0x29, 0x46, 0x6e, 0x3d, 0x1d, 0x5b, 0xd0, 0xaf,
	0x61, 0x2b, 0x24, 0x3d, 0x9c, 0x31, 0xe9, 0x4f, 0x78, 0xb5, 0x65, 0xde, 0xe7, 0xb7, 0x39, 0x4d,
	0x03, 0x41, 0x13, 0x69, 0x0a, 0x4b, 0xd5, 0xc7, 0xdd, 0xb4, 0x8e, 0xc6, 0x03, 0xa2, 0x1f, 0x03,
	0x4a, 0xa5, 0x20, 0x38, 0x52, 0xce, 0x55, 0x87, 0x0b, 0x75, 0x41, 0xaf, 0x98, 0x84, 0x36, 0x88,
	0x37, 0x06, 0xb6, 0x03, 0xd8, 0x9a, 0xe3, 0x18, 0x7d, 0x02, 0x1b, 0x11, 0xbe, 0xf2, 0x33, 0xe6,
	0x5f, 0x50, 0xe9, 0x0b, 0x2c, 0x89, 0x56, 0x7d, 0xc9, 0x6d, 0x44, 0xf8, 0xea, 0x2d, 0x7b, 0x49,
	0xa5, 0x8b, 0x65, 0x41, 0x0b, 0x27, 0x68, 0xe5, 0x82, 0x76, 0x98, 0xd3, 0xb6, 0x19, 0x34, 0x67,
	0x25, 0x41, 0x4d, 0xa8, 0xbc, 0x23, 0x23, 0xfb, 0x7a, 0x53, 0x7f, 0xd1, 0x4b, 0x58, 0x1e, 0x62,
	0x96, 0x11, 0x7b, 0x0a, 0xdf, 0x4d, 0x09, 0xd3, 0xf5, 0x79, 0xf9, 0x59, 0xc9, 0xf9, 0x57, 0x09,
	0xd6, 0x4c, 0xfa, 0x87, 0x36, 0x74, 0xda, 0xb0, 0x25, 0xb4, 0x41, 0x3d, 0x4d, 0x04, 0x0d, 0x52,
	0x3f, 0xe1, 0x42, 0xda, 0x8b, 0x6d, 0xd3, 0x40, 0x27, 0x06, 0x39, 0xe3, 0x42, 0xce, 0xe3, 0x63,
	0x39, 0xb0, 0x67, 0xc4, 0x0c, 0x1f, 0xeb, 0x33, 0x6e, 0x7e, 0x5a, 0x56, 0x6e, 0x4c, 0xcb, 0xeb,
	0x23, 0x4c, 0x7c, 0x27, 0x98, 0x1e, 0x41, 0x7f, 0xbd, 0xf8, 0x0d, 0x34, 0xbd, 0x83, 0xf3, 0xb3,
	0xa9, 0x2f, 0x50, 0x9f, 0xc0, 0xba, 0x89, 0xf0, 0xe2, 0x3b, 0x84, 0x11, 0x73, 0xcd, 0x58, 0x3b,
	0x37, 0x7d, 0xad, 0x28, 0x5f, 0xff, 0x5a, 0xe1, 0x8c, 0x00, 0x0e, 0xd2, 0xde, 0xc5, 0x62, 0xf5,
	0x79, 0xa0, 0x67, 0x77, 0x43, 0x7d, 0x3e, 0x3b, 0x7d, 0xd7, 0xd2, 0x9d, 0xaf, 0xe1, 0x7e, 0x37,
	0x1e, 0x72, 0xf5, 0x4a, 0x91, 0x82, 0x33, 0x56, 0x7c, 0x9c, 0x79, 0x8f, 0x59, 0x7c, 0xfa, 0x1c,
	0x1a, 0x93, 0x0f, 0x4c, 0xd4, 0x80, 0xaa, 0xdb, 0xf5, 0xba, 0xee, 0x37, 0xdd, 0xc3, 0xe6, 0xf7,
	0xd0, 0x06, 0xd4, 0xcf, 0xba, 0xae, 0xef, 0x75, 0x3d, 0xef, 0xe8, 0xf4, 0x4d, 0xb3, 0x84, 0xea,
	0xb0, 0xaa, 0x0c, 0x5f, 0x77, 0x7f, 0xd9, 0x2c, 0xbf, 0xfc, 0xf8, 0x57, 0x4f, 0xb4, 0xf7, 0xbd,
	0x1e, 0xe9, 0xef, 0xe9, 0x63, 0x6d, 0xaf, 0xcf, 0x67, 0x3e, 0x22, 0x5e, 0xac, 0xe8, 0xf6, 0x4f,
	0xff, 0x1d, 0x00, 0x00, 0xff, 0xff, 0xcc, 0x12, 0x52, 0xec, 0x61, 0x14, 0x00, 0x00,
}
