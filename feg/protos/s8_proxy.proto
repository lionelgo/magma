/*
Copyright 2020 The Magma Authors.

This source code is licensed under the BSD-style license found in the
LICENSE file in the root directory of this source tree.

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";

import "orc8r/protos/common.proto";

import "lte/protos/oai/mme_nas_state.proto";
import "lte/protos/oai/std_3gpp_types.proto";


package magma.feg;
option go_package = "magma/feg/cloud/go/protos";


service S8Proxy {
    rpc CreateSession (CreateSessionRequestPgw) returns(CreateSessionResponsePgw){}
    rpc ModifyBearer (ModifyBearerRequestPgw) returns(ModifyBearerResponsePgw) {}
    rpc DeleteSession (DeleteSessionRequestPgw) returns(DeleteSessionResponsePgw) {}
    rpc SendEcho(EchoRequest) returns(EchoResponse) {}
}

// 3GPP TS 29.274  (not all 3gpp create session fields are included)
message CreateSessionRequestPgw {
    string imsi = 1;
    string msisdn = 2;
    string mei = 3;
    ServingNetwork serving_network = 5;
    UserLocationInformation uli = 4;


    uint32 rat_type = 6;
    PDNType pdn_type = 7;
    PdnAddressAllocation paa = 8;

    string apn = 9;
    string selection_mode = 18;
    uint32 apn_restriction = 11;
    Ambr ambr = 12;         //Aggregate Maximum BitRate

    BearerContext bearer_context = 14;

    bytes indication_flag = 15;
    string charging_characteristics = 16;
    TimeZone time_zone = 17;
}

enum PDNType {
    IPV4 = 0;
    IPV6 = 1;
    IPV4V6 = 2;
}

message UserLocationInformation {
    uint32 lac = 1;
    uint32 ci = 2;
    uint32 sac = 3;
    uint32 rac = 4;
    uint32 tac = 5;       // used on magma
    uint32 eci = 6;       // used on magma
    uint32 MeNbi = 7;     // Macro eNodeB ID field
    uint32 EMeNbi = 8;    // Extended Macro eNodeB ID field
}

message ServingNetwork {
    string mcc = 1;
    string mnc = 2;
}

message BearerContext {
    uint32 id = 1;
    Fteid user_plane_fteid = 2;
    QosInformation qos = 3;
    uint32 charging_id = 4;
}

message QosInformation {
    uint32 pci = 1;
    uint32 priority_level = 2;
    uint32 preemption_capability = 4;
    uint32 preemption_vulnerability = 5;
    uint32 qci = 6;
    Ambr gbr = 7;
    Ambr mbr = 8;
}

message Ambr {
    uint64 br_ul = 1;
    uint64 br_dl = 2;
}

message PdnAddressAllocation{
    string ipv4_address = 1;
    string ipv6_address = 2;
    uint32 ipv6_prefix = 3;
}

message TimeZone {
    uint32 time_zone = 1;
    uint32 daylight_saving_time = 2;
}

message Fteid {
    string ipv4_address = 1;
    string ipv6_address = 2;
    uint32 teid = 3;
}

message CreateSessionResponsePgw {
    string subscriber_ip = 3;
    uint32 apn_restriction = 4;
    BearerContext bearer_context = 5;
    //TrafficFlowTemplate saved_tft = 13;
}

message ModifyBearerRequestPgw {
    string imsi = 1;
    Fteid enb_fteid = 2;
}

message ModifyBearerResponsePgw {
}

message DeleteSessionRequestPgw {
    string imsi = 1; // needed for nh in feg
}

message DeleteSessionResponsePgw{

}

message EchoRequest{
    string imsi = 1; // needed for nh in feg
}

message EchoResponse{

}
